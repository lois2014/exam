<?php
namespace app\admin\controller;

use app\index\service\UserService;
use think\Controller;
use think\Cookie;

class Base extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $res = $this->isLogin();
        if(!$res)  $this->error('请登录','/examination/public/login');
        $res = json_decode($res,true);
        if($res['state'] == 0){
            $this->error($res['msg'],'/examination/public/');
        }
    }

    public function isLogin()
    {
        if(Cookie::has('user')){
            $user = Cookie::get('user');
//            var_dump($user);die;
            if(empty($user['role'])){
                $this->clearCookie('user');
                return $this->ajaxFail('账户异常，请重新登录');
            }
            if($user['role'] == 1) {
                return $this->ajaxSuccess();
            }
            return $this->ajaxFail('没有权限');
        }
        return false;
    }

    public function getUserInfo(){
        if($this->isLogin()){
            return Cookie::get('user');
        }
        return [];
    }

    public function userLogin($user){
        if($this->isLogin()) return true;

        Cookie::set('user',$user);
        return true;
    }

    public function ajaxSuccess($data='')
    {
        $return = [
            'state'=>1,
            'msg'=>'',
            'data'=>$data
        ];
        return json_encode($return);
    }
    public function ajaxFail($msg,$data='')
    {
        $return = [
            'state'=>0,
            'msg'=>$msg,
            'data'=>$data
        ];
        return json_encode($return);
    }

    public function clearCookie($key)
    {
        if(empty($key)){
            return false;
        }
        if(Cookie::has($key)) {
            Cookie::delete($key);
        }
        return true;
    }

    public function checkImg($file)
    {
        $valid_type = [
            'image/jpeg',
            'image/png',
            'image/gif',
            'image/jpg'
        ];
        $type = $file['type'];  //文件类型
        $name = $file['name'];    //文件名
        $error = $file['error'];  //错误
        $tmpName = $file['tmp_name']; //临时文件名
        $msg = '';
        //错误类型
        if($error> 0){
            switch($error) {
                case 1:
                    $msg = '上传文件过大';
                    break;
                case 2:
                    $msg = '图片超出2M';
                    break;
                case 3:
                    $msg = '文件部分上传';
                    break;
                case 4:
                    $msg = '没有文件上传';
                    break;
            }
        }

        if(!$msg && !in_array($type,$valid_type)){
            $msg= '文件类型错误:'.$name;
        }
        if($msg!='') {
            return $this->ajaxFail($msg);
        }
        return $this->ajaxSuccess();
    }

    public function upload($file)
    {
        $fileName = uniqid().'.jpg';
        $tmpName = $file['tmp_name'];
        if(empty($tmpName)){
            return false;
        }
        $basePath = UPLOAD_PATH.'/';
        // var_dump($basePath);die;
        if(!is_dir($basePath)){
            mkdir($basePath);
        }
        $subDir = date('Ymd');
        $subPath = $basePath.'/'.$subDir;
        if(!is_dir($subPath)){
            mkdir($subPath);
        }
        $filePath = $subPath.'/'.$fileName;
        $fileUrl = UPLOAD_URL.'/'.$subDir.'/'.$fileName;
        if(move_uploaded_file($tmpName,$filePath)){
           return $fileUrl;
       }else{
           return false;
       }
    }
}
